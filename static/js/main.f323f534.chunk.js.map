{"version":3,"sources":["api.js","store/isLoading.js","store/error.js","store/users.js","store/pagination.js","store/index.js","User.js","constants.js","UsersTable.js","Pagination.js","App.js","index.js"],"names":["loadUsersFromServer","a","async","fetch","response","json","setIsLoading","isLoading","type","isLoadingReducer","action","errorReducer","error","usersReducer","users","paginationReducer","currentPage","getUsers","state","getIsLoading","getCurrentPage","getError","store","createStore","combineReducers","applyMiddleware","thunk","User","user","id","name","surname","desc","HEADERS","code","title","UsersTable","className","map","header","key","Pagination","setCurrentPage","tableData","withInfo","handleClick","e","value","target","indexOfLastItem","indexOfFirstItem","pageNumbers","i","Math","ceil","length","push","slice","cn","onClick","disabled","number","connect","defaultProps","loadUsers","dispatch","usersFromServer","errorMessage","message","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f323f534.chunk.js","sourcesContent":["const USERS_URL =\r\n  'https://my-json-server.typicode.com/olesmarola/usersApi/users';\r\n\r\nexport const loadUsersFromServer = async () => {\r\n  const response = await fetch(USERS_URL);\r\n\r\n  return response.json();\r\n};\r\n","const SET_IS_LOADING = 'isLoading';\n\nexport const setIsLoading = isLoading => ({\n  type: SET_IS_LOADING,\n  isLoading,\n});\n\nconst isLoadingReducer = (isLoading = false, action) => {\n  switch (action.type) {\n    case SET_IS_LOADING:\n      return action.isLoading;\n    default:\n      return isLoading;\n  }\n};\n\nexport default isLoadingReducer;\n","const SET_ERROR = 'setError';\r\n\r\nexport const setError = error => ({\r\n  type: SET_ERROR,\r\n  error,\r\n});\r\n\r\nconst errorReducer = (error = '', action) => {\r\n  switch (action.type) {\r\n    case SET_ERROR:\r\n      return action.error;\r\n    default:\r\n      return error;\r\n  }\r\n};\r\n\r\nexport default errorReducer;\r\n","import { loadUsersFromServer } from '../api';\r\nimport { setIsLoading } from './isLoading';\r\nimport { setError } from './error';\r\n\r\nconst SET_USERS = 'setUsers';\r\n\r\nexport const setUsers = users => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\n\r\nexport const loadUsers = () => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(setIsLoading(true));\r\n\r\n      const usersFromServer = await loadUsersFromServer();\r\n\r\n      dispatch(setUsers(usersFromServer));\r\n      dispatch(setIsLoading(false));\r\n    } catch (e) {\r\n      const errorMessage = e.message + '. Reload page and try again, please!';\r\n\r\n      dispatch(setIsLoading(false));\r\n      dispatch(setError(errorMessage));\r\n    }\r\n  };\r\n};\r\n\r\nconst usersReducer = (users = [], action) => {\r\n  switch (action.type) {\r\n    case SET_USERS:\r\n      return action.users;\r\n    default:\r\n      return users;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","const SET_CURRENT_PAGE = 'setCurrentPage';\r\n\r\nexport const setCurrentPage = currentPage => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\n\r\nconst paginationReducer = (currentPage = 1, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_PAGE:\r\n      return action.currentPage;\r\n    default:\r\n      return currentPage;\r\n  }\r\n};\r\n\r\nexport default paginationReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport usersReducer from './users';\r\nimport isLoadingReducer from './isLoading';\r\nimport paginationReducer from './pagination';\r\nimport errorReducer from './error';\r\n\r\nexport const getUsers = state => state.users;\r\nexport const getIsLoading = state => state.isLoading;\r\nexport const getCurrentPage = state => state.currentPage;\r\nexport const getError = state => state.error;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    users: usersReducer,\r\n    isLoading: isLoadingReducer,\r\n    currentPage: paginationReducer,\r\n    error: errorReducer,\r\n  }),\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst User = ({ user }) => (\r\n  <tr>\r\n    <td>{user.id}</td>\r\n    <td>{user.name}</td>\r\n    <td>{user.surname}</td>\r\n    <td>{user.desc}</td>\r\n  </tr>\r\n);\r\n\r\nexport default User;\r\n\r\nUser.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    surname: PropTypes.string.isRequired,\r\n    desc: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","export const HEADERS = [\n  {\n    code: 'id',\n    title: 'Id',\n  },\n  {\n    code: 'name',\n    title: 'Name',\n  },\n  {\n    code: 'surname',\n    title: 'Surname',\n  },\n  {\n    code: 'desc',\n    title: 'Description',\n  },\n];\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport User from './User';\r\nimport { HEADERS } from './constants';\r\n\r\nconst UsersTable = ({ users }) => {\r\n  return (\r\n    <table className=\"striped\">\r\n      <thead>\r\n        <tr>\r\n          {HEADERS.map(header => (\r\n            <th key={header.code}>{header.title}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.map(user => (\r\n          <User key={user.id} user={user} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default UsersTable;\r\n\r\nUsersTable.propTypes = {\r\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentPage } from './store/pagination';\nimport { getCurrentPage } from './store';\nimport UsersTable from './UsersTable';\n\nconst Pagination = ({ currentPage, setCurrentPage, tableData, withInfo }) => {\n  const perPage = 5;\n  const startPage = 1;\n\n  const handleClick = e => {\n    const { value } = e.target;\n\n    if (currentPage !== +value) {\n      setCurrentPage(+value);\n    }\n  };\n\n  const goToPrevPage = () => {\n    setCurrentPage(currentPage - 1);\n  };\n\n  const goToNextPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  const indexOfLastItem = currentPage * perPage;\n  const indexOfFirstItem = indexOfLastItem - perPage;\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(tableData.length / perPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <>\n      <UsersTable users={tableData.slice(indexOfFirstItem, indexOfLastItem)} />\n      <div className=\"pagination__container\">\n        <div>\n          {withInfo && (\n            <span className=\"pagination__info\">\n              {`From ${indexOfFirstItem + 1} to ${\n                indexOfLastItem > tableData.length\n                  ? tableData.length\n                  : currentPage * perPage\n              } of ${tableData.length}`}\n            </span>\n          )}\n        </div>\n        <ul className=\"pagination\">\n          <li>\n            <button\n              type=\"button\"\n              className={cn('pagination__page', {\n                'pagination__page--disabled': currentPage === startPage,\n              })}\n              onClick={goToPrevPage}\n              disabled={currentPage === startPage}\n            >\n              Previous\n            </button>\n          </li>\n\n          {pageNumbers.map(number => (\n            <li key={number}>\n              <button\n                className={cn('pagination__page', {\n                  'pagination__page--active': currentPage === number,\n                })}\n                type=\"button\"\n                key={number}\n                value={number}\n                onClick={handleClick}\n              >\n                {number}\n              </button>\n            </li>\n          ))}\n\n          <li>\n            <button\n              type=\"button\"\n              className={cn('pagination__page', {\n                'pagination__page--disabled':\n                  currentPage === pageNumbers.length,\n              })}\n              disabled={currentPage === pageNumbers.length}\n              onClick={goToNextPage}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  currentPage: getCurrentPage(state),\n});\n\nexport default connect(mapStateToProps, { setCurrentPage })(Pagination);\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  setCurrentPage: PropTypes.func.isRequired,\n  tableData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  withInfo: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  withInfo: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getIsLoading, getUsers, getError } from './store';\nimport { loadUsers } from './store/users';\nimport Pagination from './Pagination';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './App.scss';\n\nconst App = ({ users, isLoading, loadUsers, error }) => {\n  const loadUserTable = async () => {\n    await loadUsers();\n  };\n\n  if (error.length) {\n    console.log('err');\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className=\"container\">\n      {users.length > 0 ? (\n        <Pagination tableData={users} withInfo />\n      ) : (\n        <div className=\"post__start\">\n          <button\n            disabled={isLoading}\n            className=\"waves-effect waves-light btn-large button__load\"\n            type=\"button\"\n            onClick={loadUserTable}\n          >\n            {isLoading ? 'Loading...' : 'Load Users'}\n            <i className=\"material-icons right\">cloud</i>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n  isLoading: getIsLoading(state),\n  error: getError(state),\n});\n\nexport default connect(mapStateToProps, { loadUsers })(App);\n\nApp.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  loadUsers: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}